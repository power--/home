<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
http://www.springframework.org/schema/data/jpa
http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
http://www.springframework.org/schema/data/repository
http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd
">
 	 	
	<!-- This is abstract so you can extend it in test and main according to environment  -->
	<bean id="entityManagerFactoryAbstract" abstract="true"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<property name="persistenceUnitManager">
			<bean class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
				<property name="defaultDataSource" ref="dataSource" />
				<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
			</bean>
		</property>
	</bean>
	
	<bean id="entityManagerFactory" parent="entityManagerFactoryAbstract">	
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<!-- <prop key="hibernate.search.default.directory_provider">filesystem</prop>
				<prop key="hibernate.search.default.indexBase">c:/lucene/indexes</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
				<prop key="hibernate.search.analyzer">org.wltea.analyzer.lucene.IKAnalyzer</prop> -->
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg>
			<ref bean="dataSource"></ref>
		</constructor-arg>		
	</bean>
	 
	<tx:annotation-driven transaction-manager="transactionManager" />
	<context:component-scan base-package="com.goparty.data.dao"/>   
	<jpa:repositories base-package="com.goparty.data.repository" />
	
	<bean id="friendDao" class="com.goparty.data.dao.FriendDao">
		<property name="sqlGetFriends">
			<value><![CDATA[
			SELECT u.id ,u.nickName,u.birthdate,u.gender,u.location,
				u.signature,u.photo,
				uf.remarkName		
			FROM gp_user_friend uf
			JOIN gp_user u ON uf.friendId=u.id
			WHERE uf.status='NORMAL' AND uf.userId=:userId
			LIMIT :offset, :limit 
			]]></value>
		</property>
	</bean>
	
</beans> 